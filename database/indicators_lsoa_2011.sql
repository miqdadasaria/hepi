DROP TABLE HEPI_INDICATORS_LSOA PURGE;
CREATE TABLE HEPI_INDICATORS_LSOA 
   (INDICATOR VARCHAR2(255 BYTE), 
	YEAR NUMBER(4,0), 
	LSOA01CD VARCHAR2(10 BYTE), 
	IMD_GROUP VARCHAR2(3 BYTE), 
	AGE_GROUP VARCHAR2(10 BYTE), 
	SEX VARCHAR2(1 BYTE), 
	INDICATOR_VALUE NUMBER
   )TABLESPACE HEPI;


DROP INDEX IND_AGE;
DROP INDEX IND_IMD;
DROP INDEX IND_NAME;
DROP INDEX IND_SEX;
DROP INDEX IND_YEAR;
DROP INDEX IND_LSOA;

CREATE BITMAP INDEX HEPI.IND_AGE ON HEPI.HEPI_INDICATORS_LSOA (AGE_GROUP) TABLESPACE HEPI;
CREATE BITMAP INDEX HEPI.IND_IMD ON HEPI.HEPI_INDICATORS_LSOA (IMD_GROUP) TABLESPACE HEPI;
CREATE BITMAP INDEX HEPI.IND_NAME ON HEPI.HEPI_INDICATORS_LSOA (INDICATOR) TABLESPACE HEPI;
CREATE BITMAP INDEX HEPI.IND_SEX ON HEPI.HEPI_INDICATORS_LSOA (SEX) TABLESPACE HEPI;
CREATE BITMAP INDEX HEPI.IND_YEAR ON HEPI.HEPI_INDICATORS_LSOA (YEAR) TABLESPACE HEPI;
CREATE INDEX HEPI.IND_LSOA ON HEPI.HEPI_INDICATORS_LSOA (LSOA01CD) TABLESPACE HEPI;



DROP TABLE HEPI_INDICATORS_LSOA_2011 PURGE;
CREATE TABLE HEPI_INDICATORS_LSOA_2011 AS  
(SELECT 
lsoa11cd, 
indicator, 
year, 
SUM(lkup.weight_2001_TO_2011*indicator_value) indicator_value FROM 
(SELECT lsoa01cd, indicator, year, 
SUM(indicator_value) indicator_value FROM hepi_indicators_lsoa GROUP BY lsoa01cd, indicator, year) ind
INNER JOIN
LSOA_2001_2011_LOOKUP lkup
ON ind.lsoa01cd=lkup.lsoa01cd
GROUP BY year, lsoa11cd, indicator);

UPDATE HEPI_INDICATORS SET IMD_GROUP = 'U' WHERE imd_group='Q';
COMMIT;

CREATE TABLE HES_AVOIDABLE_HOSP AS
SELECT 
ip.extract_hesid, 
ip.episode_number,
CASE pat.sex WHEN 1 THEN 'M' WHEN 2 THEN 'F' ELSE 'U' END AS sex, 
ip.hes_year, 
ip.soal, 
NVL(ip.age_group,'U') AS age_group,
'Q' || imd.quintile AS quintile
FROM 
HES_INPATIENT_EPISODE ip
INNER JOIN
HES_INPATIENT_CIPS c
ON ip.cips_number = c.cips_number 
AND c.classpat=1 
AND c.admisorc NOT IN (51,52,53) 
AND c.admimeth BETWEEN 21 AND 28
AND ip.epiorder=1 
AND ip.epitype=1
INNER JOIN
IMD_2010 imd
ON ip.soal = imd.lsoa01cd
LEFT JOIN
HES_PATIENT pat
ON ip.extract_hesid=pat.extract_hesid;

CREATE INDEX AVD_EXTRACT_HESID ON HES_AVOIDABLE_HOSP (EXTRACT_HESID);
CREATE INDEX AVD_EPI ON HES_AVOIDABLE_HOSP (EPISODE_NUMBER);
CREATE INDEX AVD_SOAL ON HES_AVOIDABLE_HOSP (SOAL);
CREATE BITMAP INDEX AVD_HES_YEAR ON HES_AVOIDABLE_HOSP (HES_YEAR);
CREATE BITMAP INDEX AVD_AGE_GROUP ON HES_AVOIDABLE_HOSP (AGE_GROUP);
CREATE BITMAP INDEX AVD_SEX ON HES_AVOIDABLE_HOSP (SEX);
CREATE BITMAP INDEX AVD_IMD ON HES_AVOIDABLE_HOSP (QUINTILE);